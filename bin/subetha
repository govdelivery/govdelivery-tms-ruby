#!/usr/bin/env jruby

require File.expand_path('../../config/environment', __FILE__)

class SubethaRunner
  def run
    self_read, self_write = IO.pipe

    %w(INT TERM USR1 USR2 TTIN).each do |sig|
      begin
        trap sig do
          self_write.puts(sig)
        end
      rescue ArgumentError
        puts "Signal #{sig} not supported"
      end
    end

    begin
      smtp.run

      while readable_io = IO.select([self_read])
        signal = readable_io.first[0].gets.strip
        handle_signal(signal)
      end
    rescue Interrupt
      puts 'Shutting down'
      smtp.stop
      # Explicitly exit so busy Processor threads can't block
      # process shutdown.
      exit(0)
    end
  end

  def handle_signal(sig)
    puts "Got #{sig} signal"
    case sig
    when 'INT'
      raise Interrupt
    when 'TERM'
      raise Interrupt
    end
  end

  def smtp
    @smtp ||= Subetha::Listener.new({})
  end
end

SubethaRunner.new.run
